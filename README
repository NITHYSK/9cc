9cc

・概要
	練習で作成した簡易コンパイラです。
	現在簡易的な構文解析とアセンブラ出力機能のみが実装されています。

・動作環境
	以下の環境で動作テストを行いました。
	OS ：Windows10 home 64bit 20H2
	CPU：Intel64 Family 6 Model 58 Stepping 9 GenuineIntel ~2600 MHz
	RAM：DDR3-1600 8086MB
	VM ：Windows Subsystem for Linux (WSL) Ubuntu 20.04.2 LTS

・ビルド
	GCCを導入済みの環境においては、次のコマンドからビルドできます

	~/9cc$ make

	また、上記コマンドで生成されたファイルを消去したい場合には次のコマンドを実効してください。

	~/9cc$ make clean

・テスト
	現在２種類のテスト用バッチファイルが存在します。
		
	test.sh <0以上255以下の整数> <代入または加減乗除や比較演算子を含む整数式>：
	第一引数の評価結果と第二引数の比較を行い、結果を表示します。
	式の最後には必ず記号;を付けてください。

	test1.sh：
	あらかじめ用意された数式を評価し、結果を表示します。

	test.shの実行例
		例１：
		~/9cc$ ./test.sh "3" "1 + 1 + 1 ;"
		出力：
		1 + 1 + 1 ; => 3
		OK

		例２：
		~/9cc$ ./test.sh 1 " +5 == 100;"
		出力：
		 +5 == 100; => 1 expected, but got 0

	test1.shの実行例
		1==1; => 1
		1+2+3 != 6; => 0
		-(-(-(-(5+2)*3)))-4 < 1+ 1 + 1+1+1+1+1+1; => 0
		123 - 50; => 73
		50   +1   +   2; => 53
		以下略

実行方法：
	ビルドが終わると、次のコマンドから実行できます。
	数式の文法が予測されたものと異なっていた場合、その趣旨のエラーメッセージが表示されます。

	~/9cc$ ./9cc <加減乗除や比較演算子を含む整数式>

	正常に動作すると、Intel構文のx86_64アセンブラプログラムをターミナル画面に出力します。
	
	実行例：
		~9cc$ ./9cc "1+2+3;"

	出力：
		.intel_syntax noprefix
		.globl main
		main:
			push rbp
			mov rbp, rsp
			push 2
			push 3
			pop rdi
			pop rax
			add rax, rdi
			push rax
			pop rax
			mov rsp, rbp
			pop rbp
			ret

	次のように標準出力からリダイレクトされたファイルは、通常のアセンブラと同様に扱えます。

	~9cc$ ./9cc "a=12; b=20; a+b;" > tmp.s
	~9cc$ cc -o tmp tmp.s
	~9cc$ ./tmp
	~9cc$ echo $?
	32

